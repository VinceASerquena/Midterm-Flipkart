<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-31T12:20:33 PST" name="Default suite" finished-at="2023-10-31T12:21:04 PST" duration-ms="31484">
    <groups>
    </groups>
    <test started-at="2023-10-31T12:20:33 PST" name="Default test" finished-at="2023-10-31T12:21:04 PST" duration-ms="31484">
      <class name="scripts.OpenAndNavigateApp">
        <test-method is-config="true" signature="startServerwithApp()[pri:0, instance:scripts.OpenAndNavigateApp@3fc2959f]" started-at="2023-10-31T12:20:33 PST" name="startServerwithApp" finished-at="2023-10-31T12:21:01 PST" duration-ms="27991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startServerwithApp -->
        <test-method signature="navigateFirstPage()[pri:0, instance:scripts.OpenAndNavigateApp@3fc2959f]" started-at="2023-10-31T12:21:01 PST" name="navigateFirstPage" finished-at="2023-10-31T12:21:03 PST" duration-ms="1856" status="FAIL">
          <exception class="org.openqa.selenium.UnsupportedCommandException">
            <message>
              <![CDATA[The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [b0559bfe-fa45-4207-bb2a-18b9e1baf8c9, getElementAccessibleName {id=00000000-0000-01a4-ffff-ffff00000031}]
Capabilities {appium:app: C:\Users\COLLABERA.DIGITAL\..., appium:appPackage: com.flipkart.android, appium:appWaitActivity: com.flipkart.android.activi..., appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {app: C:\Users\COLLABERA.DIGITAL\..., appWaitActivity: com.flipkart.android.activi..., autoGrantPermissions: true, automationName: UIAutomator2, deviceName: Vince Pixel 4, platformName: ANDROID}, appium:deviceApiLevel: 33, appium:deviceManufacturer: Google, appium:deviceModel: sdk_gphone_x86_64, appium:deviceName: emulator-5554, appium:deviceScreenDensity: 560, appium:deviceScreenSize: 1440x3040, appium:deviceUDID: emulator-5554, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3.5, appium:platformVersion: 13, appium:statBarHeight: 98, appium:takesScreenshot: true, appium:viewportRect: {height: 2858, left: 0, top: 98, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Element: [[AndroidDriver:  on ANDROID (b0559bfe-fa45-4207-bb2a-18b9e1baf8c9)] -> xpath: //android.widget.TextView[@text = 'Language']]
Session ID: b0559bfe-fa45-4207-bb2a-18b9e1baf8c9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnsupportedCommandException: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [b0559bfe-fa45-4207-bb2a-18b9e1baf8c9, getElementAccessibleName {id=00000000-0000-01a4-ffff-ffff00000031}]
Capabilities {appium:app: C:\Users\COLLABERA.DIGITAL\..., appium:appPackage: com.flipkart.android, appium:appWaitActivity: com.flipkart.android.activi..., appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {app: C:\Users\COLLABERA.DIGITAL\..., appWaitActivity: com.flipkart.android.activi..., autoGrantPermissions: true, automationName: UIAutomator2, deviceName: Vince Pixel 4, platformName: ANDROID}, appium:deviceApiLevel: 33, appium:deviceManufacturer: Google, appium:deviceModel: sdk_gphone_x86_64, appium:deviceName: emulator-5554, appium:deviceScreenDensity: 560, appium:deviceScreenSize: 1440x3040, appium:deviceUDID: emulator-5554, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3.5, appium:platformVersion: 13, appium:statBarHeight: 98, appium:takesScreenshot: true, appium:viewportRect: {height: 2858, left: 0, top: 98, width: 1440}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Element: [[AndroidDriver:  on ANDROID (b0559bfe-fa45-4207-bb2a-18b9e1baf8c9)] -> xpath: //android.widget.TextView[@text = 'Language']]
Session ID: b0559bfe-fa45-4207-bb2a-18b9e1baf8c9
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.getAccessibleName(RemoteWebElement.java:160)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:42)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.call(InterceptorOfASingleElement.java:65)
at io.appium.java_client.proxy.Interceptor.intercept(Interceptor.java:78)
at org.openqa.selenium.remote.RemoteWebElement$ByteBuddy$BHewKIeY.getAccessibleName(Unknown Source)
at utils.commonActions.validateIfDisplayedTrue(commonActions.java:81)
at scripts.OpenAndNavigateApp.navigateFirstPage(OpenAndNavigateApp.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnsupportedCommandException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateFirstPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:scripts.OpenAndNavigateApp@3fc2959f]" started-at="2023-10-31T12:21:03 PST" name="tearDown" finished-at="2023-10-31T12:21:04 PST" duration-ms="1541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- scripts.OpenAndNavigateApp -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
